# singleton pattern

this pattern ensures that a class has only one instance and provides a global point of access to that instance

A car key is like a Singleton pattern, ensuring that only one key can open a special door.

A common use case for the Singleton pattern is the logging mechanism. 
For example, an application that writes to a log file to keep track of errors, system events, or debug information.

# factory mathod pattern

this patterns provides an interface for creating objects but allows subclasses to alter type of objects that will be created

In the automotive industry, car manufacturers use the Factory Method Pattern to produce different models and variations of vehicles on the same assembly line. 
Each vehicle model is created based on a common blueprint, but with variations in features and appearance.

# observer pattern

this pattern defines a one-to-many dependency between objects, so that when one object changes state, all its dependencies are notified and updated automatically
